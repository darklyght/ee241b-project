# Specify Global Variables
clockPeriod: &CLK_PERIOD "1ns"
verilogSrc: &VERILOG_SRC
  - "src/linearFloatingPointArray.v"
  # Add more source files here if you like

# Specify clock signals
vlsi.inputs.clocks: [
  {name: "clock", period: *CLK_PERIOD, uncertainty: "0.1ns"}
]

# If you want to syn/par certain module, replace the top_module with
# the one you concern with

# Synthesis Constraints
synthesis.inputs:
  top_module: "linearFloatingPointArray"
  input_files: *VERILOG_SRC

# Placement Constraints
vlsi.inputs.placement_constraints:
  - path: "linearFloatingPointArray"
    type: toplevel
    x: 0
    y: 0
    width:  100
    height: 100
    margins:
      left:   0
      right:  0
      top:    0
      bottom: 0

#  - path: "dot_product/sram_a"
#    type: hardmacro
#    x: 20
#    y: 54
#    width: 134.536
#    height: 100
#    orientation: r0
#    top_layer: M4
#  - path: "dot_product/sram_b"
#    type: hardmacro
#    x: 20
#    y: 172.8
#    width: 134.536
#    height: 100
#    orientation: r0
#    top_layer: M4
#  - path: "dot_product/place_obs_bottom"
#    type: obstruction
#    obs_types: ["place"]
#    x: 0
#    y: 0
#    width: 300
#    height: 1.08 # 1 core site tall, necessary to avoid shorts

# Pin placement constraints
vlsi.inputs.pin_mode: generated
vlsi.inputs.pin.generate_mode: semi_auto
vlsi.inputs.pin.assignments: [
  {pins: "*", layers: ["M5", "M7"], side: "bottom"}
]

par.innovus.use_cco: true

# Power Straps
par.power_straps_mode: generate
par.generate_power_straps_method: by_tracks
par.blockage_spacing: 2.0
par.generate_power_straps_options:
  by_tracks:
    strap_layers:
      - M3
      - M4
      - M5
      - M6
      - M7
      - M8
      - M9
    pin_layers:
      - M9
        #track_width: 7 # minimum allowed for M2 & M3
    track_width: 7
    track_spacing: 0
    track_spacing_M3: 1 # to avoid M2 shorts at higher density
    track_start: 10
    power_utilization: 0.05
    power_utilization_M8: 1.0
    power_utilization_M9: 1.0
