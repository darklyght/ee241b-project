;buildInfoPackage: chisel3, version: 3.2.4, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit PositPackedtoUnpacked : 
  module PositPackedtoUnpacked : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {sign : UInt<1>, others : UInt<15>}, out : {sign : UInt<1>, exponent : UInt<28>, fraction : UInt<12>}}
    
    io.out.sign <= io.in.sign @[Conversion.scala 13:21]
    node _T = bits(io.in.sign, 0, 0) @[Bitwise.scala 71:15]
    node _T_1 = mux(_T, UInt<15>("h07fff"), UInt<15>("h00")) @[Bitwise.scala 71:12]
    node _T_2 = xor(io.in.others, _T_1) @[Conversion.scala 15:36]
    node _T_3 = add(_T_2, io.in.sign) @[Conversion.scala 15:79]
    node others = tail(_T_3, 1) @[Conversion.scala 15:79]
    node _T_4 = bits(others, 14, 14) @[Conversion.scala 16:33]
    node _T_5 = not(others) @[Conversion.scala 16:129]
    node _T_6 = bits(_T_5, 7, 0) @[Bitwise.scala 108:18]
    node _T_7 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 101:47]
    node _T_8 = xor(UInt<8>("h0ff"), _T_7) @[Bitwise.scala 101:21]
    node _T_9 = shr(_T_6, 4) @[Bitwise.scala 102:21]
    node _T_10 = and(_T_9, _T_8) @[Bitwise.scala 102:31]
    node _T_11 = bits(_T_6, 3, 0) @[Bitwise.scala 102:46]
    node _T_12 = shl(_T_11, 4) @[Bitwise.scala 102:65]
    node _T_13 = not(_T_8) @[Bitwise.scala 102:77]
    node _T_14 = and(_T_12, _T_13) @[Bitwise.scala 102:75]
    node _T_15 = or(_T_10, _T_14) @[Bitwise.scala 102:39]
    node _T_16 = bits(_T_8, 5, 0) @[Bitwise.scala 101:28]
    node _T_17 = shl(_T_16, 2) @[Bitwise.scala 101:47]
    node _T_18 = xor(_T_8, _T_17) @[Bitwise.scala 101:21]
    node _T_19 = shr(_T_15, 2) @[Bitwise.scala 102:21]
    node _T_20 = and(_T_19, _T_18) @[Bitwise.scala 102:31]
    node _T_21 = bits(_T_15, 5, 0) @[Bitwise.scala 102:46]
    node _T_22 = shl(_T_21, 2) @[Bitwise.scala 102:65]
    node _T_23 = not(_T_18) @[Bitwise.scala 102:77]
    node _T_24 = and(_T_22, _T_23) @[Bitwise.scala 102:75]
    node _T_25 = or(_T_20, _T_24) @[Bitwise.scala 102:39]
    node _T_26 = bits(_T_18, 6, 0) @[Bitwise.scala 101:28]
    node _T_27 = shl(_T_26, 1) @[Bitwise.scala 101:47]
    node _T_28 = xor(_T_18, _T_27) @[Bitwise.scala 101:21]
    node _T_29 = shr(_T_25, 1) @[Bitwise.scala 102:21]
    node _T_30 = and(_T_29, _T_28) @[Bitwise.scala 102:31]
    node _T_31 = bits(_T_25, 6, 0) @[Bitwise.scala 102:46]
    node _T_32 = shl(_T_31, 1) @[Bitwise.scala 102:65]
    node _T_33 = not(_T_28) @[Bitwise.scala 102:77]
    node _T_34 = and(_T_32, _T_33) @[Bitwise.scala 102:75]
    node _T_35 = or(_T_30, _T_34) @[Bitwise.scala 102:39]
    node _T_36 = bits(_T_5, 14, 8) @[Bitwise.scala 108:44]
    node _T_37 = bits(_T_36, 3, 0) @[Bitwise.scala 108:18]
    node _T_38 = bits(_T_37, 1, 0) @[Bitwise.scala 108:18]
    node _T_39 = bits(_T_38, 0, 0) @[Bitwise.scala 108:18]
    node _T_40 = bits(_T_38, 1, 1) @[Bitwise.scala 108:44]
    node _T_41 = cat(_T_39, _T_40) @[Cat.scala 29:58]
    node _T_42 = bits(_T_37, 3, 2) @[Bitwise.scala 108:44]
    node _T_43 = bits(_T_42, 0, 0) @[Bitwise.scala 108:18]
    node _T_44 = bits(_T_42, 1, 1) @[Bitwise.scala 108:44]
    node _T_45 = cat(_T_43, _T_44) @[Cat.scala 29:58]
    node _T_46 = cat(_T_41, _T_45) @[Cat.scala 29:58]
    node _T_47 = bits(_T_36, 6, 4) @[Bitwise.scala 108:44]
    node _T_48 = bits(_T_47, 1, 0) @[Bitwise.scala 108:18]
    node _T_49 = bits(_T_48, 0, 0) @[Bitwise.scala 108:18]
    node _T_50 = bits(_T_48, 1, 1) @[Bitwise.scala 108:44]
    node _T_51 = cat(_T_49, _T_50) @[Cat.scala 29:58]
    node _T_52 = bits(_T_47, 2, 2) @[Bitwise.scala 108:44]
    node _T_53 = cat(_T_51, _T_52) @[Cat.scala 29:58]
    node _T_54 = cat(_T_46, _T_53) @[Cat.scala 29:58]
    node _T_55 = cat(_T_35, _T_54) @[Cat.scala 29:58]
    node _T_56 = bits(_T_55, 0, 0) @[OneHot.scala 47:40]
    node _T_57 = bits(_T_55, 1, 1) @[OneHot.scala 47:40]
    node _T_58 = bits(_T_55, 2, 2) @[OneHot.scala 47:40]
    node _T_59 = bits(_T_55, 3, 3) @[OneHot.scala 47:40]
    node _T_60 = bits(_T_55, 4, 4) @[OneHot.scala 47:40]
    node _T_61 = bits(_T_55, 5, 5) @[OneHot.scala 47:40]
    node _T_62 = bits(_T_55, 6, 6) @[OneHot.scala 47:40]
    node _T_63 = bits(_T_55, 7, 7) @[OneHot.scala 47:40]
    node _T_64 = bits(_T_55, 8, 8) @[OneHot.scala 47:40]
    node _T_65 = bits(_T_55, 9, 9) @[OneHot.scala 47:40]
    node _T_66 = bits(_T_55, 10, 10) @[OneHot.scala 47:40]
    node _T_67 = bits(_T_55, 11, 11) @[OneHot.scala 47:40]
    node _T_68 = bits(_T_55, 12, 12) @[OneHot.scala 47:40]
    node _T_69 = bits(_T_55, 13, 13) @[OneHot.scala 47:40]
    node _T_70 = bits(_T_55, 14, 14) @[OneHot.scala 47:40]
    node _T_71 = mux(_T_69, UInt<4>("h0d"), UInt<4>("h0e")) @[Mux.scala 47:69]
    node _T_72 = mux(_T_68, UInt<4>("h0c"), _T_71) @[Mux.scala 47:69]
    node _T_73 = mux(_T_67, UInt<4>("h0b"), _T_72) @[Mux.scala 47:69]
    node _T_74 = mux(_T_66, UInt<4>("h0a"), _T_73) @[Mux.scala 47:69]
    node _T_75 = mux(_T_65, UInt<4>("h09"), _T_74) @[Mux.scala 47:69]
    node _T_76 = mux(_T_64, UInt<4>("h08"), _T_75) @[Mux.scala 47:69]
    node _T_77 = mux(_T_63, UInt<3>("h07"), _T_76) @[Mux.scala 47:69]
    node _T_78 = mux(_T_62, UInt<3>("h06"), _T_77) @[Mux.scala 47:69]
    node _T_79 = mux(_T_61, UInt<3>("h05"), _T_78) @[Mux.scala 47:69]
    node _T_80 = mux(_T_60, UInt<3>("h04"), _T_79) @[Mux.scala 47:69]
    node _T_81 = mux(_T_59, UInt<2>("h03"), _T_80) @[Mux.scala 47:69]
    node _T_82 = mux(_T_58, UInt<2>("h02"), _T_81) @[Mux.scala 47:69]
    node _T_83 = mux(_T_57, UInt<1>("h01"), _T_82) @[Mux.scala 47:69]
    node leading = mux(_T_56, UInt<1>("h00"), _T_83) @[Mux.scala 47:69]
    io.out.exponent <= leading @[Conversion.scala 17:25]
    io.out.fraction <= UInt<1>("h00") @[Conversion.scala 18:25]
    
