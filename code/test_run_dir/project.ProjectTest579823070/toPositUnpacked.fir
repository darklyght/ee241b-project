;buildInfoPackage: chisel3, version: 3.2.4, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit toPositUnpacked : 
  module toPositUnpacked : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : UInt<16>, out : {sign : UInt<1>, exponent : UInt<28>, fraction : UInt<12>}}
    
    node _T = bits(io.in, 15, 15) @[Conversion.scala 16:29]
    io.out.sign <= _T @[Conversion.scala 16:21]
    wire others : UInt<15> @[Conversion.scala 17:26]
    node _T_1 = bits(others, 7, 0) @[Bitwise.scala 108:18]
    node _T_2 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 101:47]
    node _T_3 = xor(UInt<8>("h0ff"), _T_2) @[Bitwise.scala 101:21]
    node _T_4 = shr(_T_1, 4) @[Bitwise.scala 102:21]
    node _T_5 = and(_T_4, _T_3) @[Bitwise.scala 102:31]
    node _T_6 = bits(_T_1, 3, 0) @[Bitwise.scala 102:46]
    node _T_7 = shl(_T_6, 4) @[Bitwise.scala 102:65]
    node _T_8 = not(_T_3) @[Bitwise.scala 102:77]
    node _T_9 = and(_T_7, _T_8) @[Bitwise.scala 102:75]
    node _T_10 = or(_T_5, _T_9) @[Bitwise.scala 102:39]
    node _T_11 = bits(_T_3, 5, 0) @[Bitwise.scala 101:28]
    node _T_12 = shl(_T_11, 2) @[Bitwise.scala 101:47]
    node _T_13 = xor(_T_3, _T_12) @[Bitwise.scala 101:21]
    node _T_14 = shr(_T_10, 2) @[Bitwise.scala 102:21]
    node _T_15 = and(_T_14, _T_13) @[Bitwise.scala 102:31]
    node _T_16 = bits(_T_10, 5, 0) @[Bitwise.scala 102:46]
    node _T_17 = shl(_T_16, 2) @[Bitwise.scala 102:65]
    node _T_18 = not(_T_13) @[Bitwise.scala 102:77]
    node _T_19 = and(_T_17, _T_18) @[Bitwise.scala 102:75]
    node _T_20 = or(_T_15, _T_19) @[Bitwise.scala 102:39]
    node _T_21 = bits(_T_13, 6, 0) @[Bitwise.scala 101:28]
    node _T_22 = shl(_T_21, 1) @[Bitwise.scala 101:47]
    node _T_23 = xor(_T_13, _T_22) @[Bitwise.scala 101:21]
    node _T_24 = shr(_T_20, 1) @[Bitwise.scala 102:21]
    node _T_25 = and(_T_24, _T_23) @[Bitwise.scala 102:31]
    node _T_26 = bits(_T_20, 6, 0) @[Bitwise.scala 102:46]
    node _T_27 = shl(_T_26, 1) @[Bitwise.scala 102:65]
    node _T_28 = not(_T_23) @[Bitwise.scala 102:77]
    node _T_29 = and(_T_27, _T_28) @[Bitwise.scala 102:75]
    node _T_30 = or(_T_25, _T_29) @[Bitwise.scala 102:39]
    node _T_31 = bits(others, 14, 8) @[Bitwise.scala 108:44]
    node _T_32 = bits(_T_31, 3, 0) @[Bitwise.scala 108:18]
    node _T_33 = bits(_T_32, 1, 0) @[Bitwise.scala 108:18]
    node _T_34 = bits(_T_33, 0, 0) @[Bitwise.scala 108:18]
    node _T_35 = bits(_T_33, 1, 1) @[Bitwise.scala 108:44]
    node _T_36 = cat(_T_34, _T_35) @[Cat.scala 29:58]
    node _T_37 = bits(_T_32, 3, 2) @[Bitwise.scala 108:44]
    node _T_38 = bits(_T_37, 0, 0) @[Bitwise.scala 108:18]
    node _T_39 = bits(_T_37, 1, 1) @[Bitwise.scala 108:44]
    node _T_40 = cat(_T_38, _T_39) @[Cat.scala 29:58]
    node _T_41 = cat(_T_36, _T_40) @[Cat.scala 29:58]
    node _T_42 = bits(_T_31, 6, 4) @[Bitwise.scala 108:44]
    node _T_43 = bits(_T_42, 1, 0) @[Bitwise.scala 108:18]
    node _T_44 = bits(_T_43, 0, 0) @[Bitwise.scala 108:18]
    node _T_45 = bits(_T_43, 1, 1) @[Bitwise.scala 108:44]
    node _T_46 = cat(_T_44, _T_45) @[Cat.scala 29:58]
    node _T_47 = bits(_T_42, 2, 2) @[Bitwise.scala 108:44]
    node _T_48 = cat(_T_46, _T_47) @[Cat.scala 29:58]
    node _T_49 = cat(_T_41, _T_48) @[Cat.scala 29:58]
    node _T_50 = cat(_T_30, _T_49) @[Cat.scala 29:58]
    io.out.exponent <= _T_50 @[Conversion.scala 20:25]
    io.out.fraction <= others @[Conversion.scala 21:25]
    
