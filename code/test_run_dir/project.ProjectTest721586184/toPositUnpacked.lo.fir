circuit toPositUnpacked :
  module toPositUnpacked :
    input clock : Clock
    input reset : UInt<1>
    input io_in : UInt<8>
    output io_out_sign : UInt<1>
    output io_out_exponent : SInt<5>
    output io_out_fraction : UInt<9>
  
    node _T = bits(io_in, 6, 0) @[Conversion.scala 23:25]
    node _T_1 = bits(io_out_sign, 0, 0) @[Bitwise.scala 71:15]
    node _T_2 = mux(_T_1, UInt<7>("h7f"), UInt<7>("h0")) @[Bitwise.scala 71:12]
    node _T_3 = xor(_T, _T_2) @[Conversion.scala 23:43]
    node _T_4 = add(_T_3, io_out_sign) @[Conversion.scala 23:78]
    node _T_5 = tail(_T_4, 1) @[Conversion.scala 23:78]
    node others = _T_5 @[Conversion.scala 16:26 Conversion.scala 23:16]
    node _T_6 = bits(others, 6, 6) @[Conversion.scala 24:30]
    node _T_7 = not(others) @[Conversion.scala 24:77]
    node _T_8 = bits(_T_7, 3, 0) @[Bitwise.scala 108:18]
    node _T_9 = bits(_T_8, 1, 0) @[Bitwise.scala 108:18]
    node _T_10 = bits(_T_9, 0, 0) @[Bitwise.scala 108:18]
    node _T_11 = bits(_T_9, 1, 1) @[Bitwise.scala 108:44]
    node _T_12 = cat(_T_10, _T_11) @[Cat.scala 29:58]
    node _T_13 = bits(_T_8, 3, 2) @[Bitwise.scala 108:44]
    node _T_14 = bits(_T_13, 0, 0) @[Bitwise.scala 108:18]
    node _T_15 = bits(_T_13, 1, 1) @[Bitwise.scala 108:44]
    node _T_16 = cat(_T_14, _T_15) @[Cat.scala 29:58]
    node _T_17 = cat(_T_12, _T_16) @[Cat.scala 29:58]
    node _T_18 = bits(_T_7, 6, 4) @[Bitwise.scala 108:44]
    node _T_19 = bits(_T_18, 1, 0) @[Bitwise.scala 108:18]
    node _T_20 = bits(_T_19, 0, 0) @[Bitwise.scala 108:18]
    node _T_21 = bits(_T_19, 1, 1) @[Bitwise.scala 108:44]
    node _T_22 = cat(_T_20, _T_21) @[Cat.scala 29:58]
    node _T_23 = bits(_T_18, 2, 2) @[Bitwise.scala 108:44]
    node _T_24 = cat(_T_22, _T_23) @[Cat.scala 29:58]
    node _T_25 = cat(_T_17, _T_24) @[Cat.scala 29:58]
    node _T_26 = bits(_T_25, 0, 0) @[OneHot.scala 47:40]
    node _T_27 = bits(_T_25, 1, 1) @[OneHot.scala 47:40]
    node _T_28 = bits(_T_25, 2, 2) @[OneHot.scala 47:40]
    node _T_29 = bits(_T_25, 3, 3) @[OneHot.scala 47:40]
    node _T_30 = bits(_T_25, 4, 4) @[OneHot.scala 47:40]
    node _T_31 = bits(_T_25, 5, 5) @[OneHot.scala 47:40]
    node _T_32 = bits(_T_25, 6, 6) @[OneHot.scala 47:40]
    node _T_33 = mux(_T_31, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:69]
    node _T_34 = mux(_T_30, UInt<3>("h4"), _T_33) @[Mux.scala 47:69]
    node _T_35 = mux(_T_29, UInt<2>("h3"), _T_34) @[Mux.scala 47:69]
    node _T_36 = mux(_T_28, UInt<2>("h2"), _T_35) @[Mux.scala 47:69]
    node _T_37 = mux(_T_27, UInt<1>("h1"), _T_36) @[Mux.scala 47:69]
    node _T_38 = mux(_T_26, UInt<1>("h0"), _T_37) @[Mux.scala 47:69]
    node _T_39 = bits(others, 3, 0) @[Bitwise.scala 108:18]
    node _T_40 = bits(_T_39, 1, 0) @[Bitwise.scala 108:18]
    node _T_41 = bits(_T_40, 0, 0) @[Bitwise.scala 108:18]
    node _T_42 = bits(_T_40, 1, 1) @[Bitwise.scala 108:44]
    node _T_43 = cat(_T_41, _T_42) @[Cat.scala 29:58]
    node _T_44 = bits(_T_39, 3, 2) @[Bitwise.scala 108:44]
    node _T_45 = bits(_T_44, 0, 0) @[Bitwise.scala 108:18]
    node _T_46 = bits(_T_44, 1, 1) @[Bitwise.scala 108:44]
    node _T_47 = cat(_T_45, _T_46) @[Cat.scala 29:58]
    node _T_48 = cat(_T_43, _T_47) @[Cat.scala 29:58]
    node _T_49 = bits(others, 6, 4) @[Bitwise.scala 108:44]
    node _T_50 = bits(_T_49, 1, 0) @[Bitwise.scala 108:18]
    node _T_51 = bits(_T_50, 0, 0) @[Bitwise.scala 108:18]
    node _T_52 = bits(_T_50, 1, 1) @[Bitwise.scala 108:44]
    node _T_53 = cat(_T_51, _T_52) @[Cat.scala 29:58]
    node _T_54 = bits(_T_49, 2, 2) @[Bitwise.scala 108:44]
    node _T_55 = cat(_T_53, _T_54) @[Cat.scala 29:58]
    node _T_56 = cat(_T_48, _T_55) @[Cat.scala 29:58]
    node _T_57 = bits(_T_56, 0, 0) @[OneHot.scala 47:40]
    node _T_58 = bits(_T_56, 1, 1) @[OneHot.scala 47:40]
    node _T_59 = bits(_T_56, 2, 2) @[OneHot.scala 47:40]
    node _T_60 = bits(_T_56, 3, 3) @[OneHot.scala 47:40]
    node _T_61 = bits(_T_56, 4, 4) @[OneHot.scala 47:40]
    node _T_62 = bits(_T_56, 5, 5) @[OneHot.scala 47:40]
    node _T_63 = bits(_T_56, 6, 6) @[OneHot.scala 47:40]
    node _T_64 = mux(_T_62, UInt<3>("h5"), UInt<3>("h6")) @[Mux.scala 47:69]
    node _T_65 = mux(_T_61, UInt<3>("h4"), _T_64) @[Mux.scala 47:69]
    node _T_66 = mux(_T_60, UInt<2>("h3"), _T_65) @[Mux.scala 47:69]
    node _T_67 = mux(_T_59, UInt<2>("h2"), _T_66) @[Mux.scala 47:69]
    node _T_68 = mux(_T_58, UInt<1>("h1"), _T_67) @[Mux.scala 47:69]
    node _T_69 = mux(_T_57, UInt<1>("h0"), _T_68) @[Mux.scala 47:69]
    node _T_70 = mux(_T_6, _T_38, _T_69) @[Conversion.scala 24:23]
    node _T_71 = eq(others, UInt<7>("h7f")) @[Conversion.scala 24:132]
    node _T_72 = neq(others, UInt<1>("h0")) @[Conversion.scala 24:147]
    node _T_73 = not(_T_72) @[Conversion.scala 24:139]
    node _T_74 = or(_T_71, _T_73) @[Conversion.scala 24:137]
    node _T_75 = add(_T_70, _T_74) @[Conversion.scala 24:122]
    node _T_76 = tail(_T_75, 1) @[Conversion.scala 24:122]
    node _T_77 = bits(others, 6, 6) @[Conversion.scala 25:29]
    node leading = pad(_T_76, 4) @[Conversion.scala 17:27 Conversion.scala 24:17]
    node _T_78 = asSInt(leading) @[Conversion.scala 25:60]
    node _T_79 = sub(_T_78, asSInt(UInt<2>("h1"))) @[Conversion.scala 25:67]
    node _T_80 = tail(_T_79, 1) @[Conversion.scala 25:67]
    node _T_81 = asSInt(_T_80) @[Conversion.scala 25:67]
    node _T_82 = asSInt(leading) @[Conversion.scala 25:83]
    node _T_83 = sub(asSInt(UInt<1>("h0")), _T_82) @[Conversion.scala 25:74]
    node _T_84 = tail(_T_83, 1) @[Conversion.scala 25:74]
    node _T_85 = asSInt(_T_84) @[Conversion.scala 25:74]
    node _T_86 = mux(_T_77, _T_81, _T_85) @[Conversion.scala 25:22]
    node _T_87 = sub(leading, UInt<1>("h1")) @[Conversion.scala 26:48]
    node _T_88 = tail(_T_87, 1) @[Conversion.scala 26:48]
    node _T_89 = dshl(others, _T_88) @[Conversion.scala 26:36]
    node exponentFraction = bits(_T_89, 4, 0) @[Conversion.scala 19:36 Conversion.scala 26:26]
    node _T_90 = bits(exponentFraction, 4, 4) @[Conversion.scala 27:37]
    node _T_91 = bits(exponentFraction, 3, 0) @[Conversion.scala 28:46]
    node _T_92 = cat(UInt<1>("h1"), _T_91) @[Cat.scala 29:58]
    node _T_93 = bits(io_in, 7, 7) @[Conversion.scala 30:29]
    node regime = pad(_T_86, 5) @[Conversion.scala 18:26 Conversion.scala 25:16]
    node _T_94 = dshl(regime, UInt<1>("h1")) @[Conversion.scala 31:36]
    node exponent = _T_90 @[Conversion.scala 20:28 Conversion.scala 27:18]
    node _T_95 = cvt(exponent) @[Conversion.scala 31:99]
    node _T_96 = add(_T_94, _T_95) @[Conversion.scala 31:88]
    node _T_97 = tail(_T_96, 1) @[Conversion.scala 31:88]
    node _T_98 = asSInt(_T_97) @[Conversion.scala 31:88]
    node fraction = _T_92 @[Conversion.scala 21:28 Conversion.scala 28:18]
    io_out_sign <= _T_93 @[Conversion.scala 30:21]
    io_out_exponent <= asSInt(bits(_T_98, 4, 0)) @[Conversion.scala 31:25]
    io_out_fraction <= fraction @[Conversion.scala 32:25]
